Coursera - Algorithms Part I

Week 2 - Interview Questions - Stacks and Queues

Question 3: Java generics
Explain why Java prohibits generic array creation.

Java generics are a compile-time-only type check. The type is "erased" during
compilation and a result the runtime does not know what type a generic object is.
Creating a generic array would mean the runtime cannot know the type of the array.
This would mean the runtime cannot perform type safety checks. This is not a
problem for other generic objects since they have their base type.

For example:
ArrayList<String> has the same type as ArrayList<Int>

http://www.angelikalanger.com/GenericsFAQ/FAQSections/ParameterizedTypes.html#FAQ104



Cause generic is a compile time type check. The generic type only works during the compile time
but during the runtime, the type will be erased so that JVM only deals with the raw types.
For example, List<Integer> list = new ArrayList<Integer>();
during the runtime, this array will be treated as List[],
any other types(String, double) can all be added into the list
it will result in ClassCastException.
